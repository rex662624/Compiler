/* Definition section */
%{
#include "y.tab.h"	/* header file generated by bison */
extern YYSTYPE yylval; //YYSTYPE
%}

/* Define regular expression label */
newline		[\n]
digit		[0-9]
letter		[a-zA-Z]
integer     {digit}+
double      {digit}+"."{digit}+
id			{letter}+({letter}|{digit})*

%option yylineno

%x COMMENT STRING_STATE

/* Rules section */
%%

 /* Arithmetic */
"+"     { }
"-" 	{ }
"*" 	{ }
"/" 	{ }
"%"     { }
"++"    { }
"--"    { }

 /* Relational */
">"		{ }
"<"		{ }
">="	{ }
"<="	{ }
"=="	{ }
"!="	{ }

 /* Assignment */
"="		{ }
"+="	{ }
"-="	{ }
"*="	{ }
"/="	{ }
"%="	{ }

 /* Logical */
"&&"	{ }
"||"	{ }
"!"		{ }

 /* Delimiters */
"("		{ }
")"		{ }
"{"		{ }
"}"		{ }

 /* Print Keywords */	
"print"		{ }
"println"	{ }

 /* Condition and Loop Keywords */
"if"		{ }
"else"		{ }
"for"		{ }

 /* Declaration Keywords */
"var"		{ }
"void"		{ }
"int"		{ }
"float32"	{ }

 /* String Constant */
\"				        { BEGIN STRING_STATE;}
<STRING_STATE>\"		{ BEGIN INITIAL;}
<STRING_STATE>[^"]*		{ }

 /* Number Constant */
{integer}	{ }
{double}	{ }

 /* C type Comment */
"/*"				{ BEGIN COMMENT; }
<COMMENT>[^*\n]+	{ }
<COMMENT>\n			{ }
<COMMENT>"*"		{ }
<COMMENT>"*/"		{ BEGIN INITIAL; }

 /* C++ type Comment */
\/\/.*	{ }

 /* Variable ID */
 {id}       { }

 /* others */

[\n]		{ }
[ \t]		{ } /* Ignore */
[^; \t] 	{ } /* Ignore other charactor sets */
<<EOF>>     { }

%%

int yywrap()
{
    return 1;
}